
# import the necessary packages
import numpy as np
import argparse
import cv2
import imutils

def nothing(x):
    pass

# Create a black image, a window
img = np.zeros((300,512,3), np.uint8)
# create switch for ON/OFF functionality

image = cv2.VideoCapture("C0520.MP4")
xOLD=900
yOLD=870
THICKNESS = 3

FIRST = 0
RED = (0, 0, 255)
while True:
    cv2.imshow('image', img)
    k = cv2.waitKey(1) & 0xFF
    if k == 27:
        break

    ret, frame=image.read()
    color=cv2.cvtColor(frame,cv2.COLOR_RGB2HSV)
    mask=cv2.inRange(color,np.array([93,86,192]),np.array([255,255,255]))
    mask2 =cv2.erode(mask,kernel=None,iterations=2)
    mask3 = cv2.dilate(mask2,kernel=None,dst=None,iterations=8)
    output=cv2.bitwise_and(frame,frame,mask=mask3)

    kupa1,kupa2=cv2.findContours(mask3, mode=cv2.RETR_CCOMP,method= cv2.CHAIN_APPROX_SIMPLE)

    try:
        contour_sizes = [(cv2.contourArea(contour), contour) for contour in kupa1]
        biggest_contour = max(contour_sizes, key=lambda x: x[0])[1]
        epsilon = 0.1 * cv2.arcLength(biggest_contour, True)
        approx = cv2.approxPolyDP(biggest_contour, epsilon, True)
        x, y, w, h = cv2.boundingRect(approx)
        rect = cv2.minAreaRect(approx)
        box = cv2.boxPoints(rect)
        box = np.int0(box)

        for i in range(len(kupa1)):
            cv2.drawContours(frame, [box], 0, (0, 0, 255), 2)
        #cv2.rectangle(frame, (x, y), (x + w, y + h), (0, 255, 0), 2)
        #cv2.drawContours(frame, [approx], FIRST, RED, THICKNESS)
    except:
        print('Nie wykryto pi≈Çeczek')

    if cv2.waitKey(5) & 0xFF ==ord('q'):
        break
    #cv2.imshow("kozak",mask3)
    cv2.imshow("kolorki",np.hstack([frame,output]))
